services:
    backend:
        container_name: backend
        build:
            context: ./backend
            dockerfile: dockerfile.prod
        volumes:
            - ./backend:/backend
        expose:
            - 8000
        env_file: ./.env
        environment:
            - BACKEND_SERVER=${VITE_BACKEND_URL}
            - BACKEND_PREFIX=${BACKEND_PREFIX}
            - DEBUG=${DJANGO_DEBUG:?Variable DJANGO_DEBUG required}
            - SECRET_KEY=${SECRET_KEY}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
        depends_on:
            - db
        command: sh ./run-server.prod.sh

    db:
        container_name: postgres-db
        image: postgres:15-alpine
        restart: always
        volumes: 
            - db-data:/var/lib/postgresql/data
        env_file: ./.env
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        expose:
            - 5433
        healthcheck:
            test: ["CMD", "-f", "http://localhost:5433"]

    nginx: 
        container_name: nginx-server
        build:
            context: ./frontend
            dockerfile: dockerfile.prod
            args:
                - BACKEND_URL=${VITE_BACKEND_URL}
        restart: unless-stopped
        env_file: ./.env
        environment:
            - VITE_BACKEND_URL=${VITE_BACKEND_URL}
            - HUSKY=0
            - NODE_ENV=production
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            # Created by certbot in server
            - /etc/letsencrypt/ssl/fullchain.pem:/etc/nginx/ssl/fullchain.pem
            - /etc/letsencrypt/ssl/privkey.pem:/etc/nginx/ssl/privkey.pem
        depends_on: 
            - backend
        ports:
            - 443:443
            - 80:80
        command: ["nginx", "-g", "daemon off;"]

volumes: 
    db-data:
        name: cs-lineups-db
