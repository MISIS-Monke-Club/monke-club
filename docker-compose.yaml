services:
    frontend:
        container_name: frontend
        build:
            context: ./frontend
            dockerfile: dockerfile.dev
            args:
                - MODE=${MODE}
        volumes:
            - ./frontend:/frontend
            - ./frontend/node_modules:/frontend/node_modules
        env_file: ./.env
        environment:
            - VITE_BACKEND_URL=${VITE_BACKEND_URL}
            - HUSKY=${FRONTEND_LINTING:?Variable FRONTEND_LINTING is required}
            - NODE_ENV=${MODE:?Variable Mode is required}
        ports:
            - 8000:5173
        depends_on:
            - backend
        command: sh ./run-server.sh

    backend:
        container_name: backend
        build:
            context: ./backend
            dockerfile: dockerfile.dev
        volumes:
            - ./backend:/backend
        ports:
            - 3000:8000
        env_file: ./.env
        environment:
            - BACKEND_SERVER=${VITE_BACKEND_URL}
            - BACKEND_PREFIX=${BACKEND_PREFIX}
            - DEBUG=${DJANGO_DEBUG}
            - SECRET_KEY=${SECRET_KEY}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
            - TOKEN=${TOKEN}
            - ALLOWED_ORGINS=${ALLOWED_ORIGINS}
        depends_on:
            - db
        command: sh ./run-server.sh

    db:
        container_name: postgres-db
        image: postgres:15-alpine
        restart: always
        env_file: ./.env
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        ports:
            - 5433:5432
        healthcheck:
            test: ["CMD", "-f", "http://localhost:5433"]
